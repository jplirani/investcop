# -*- coding: utf-8 -*-
"""investcop-streamlit-original.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1teOk6A0XNe4nyYeJ4sbvx2IjXpOLC0G5

# InvestCop
## Main DataFrame to generate Analysis Data from Yahoo Finance
## Streamlit Edt
## Date: 04/11/21

## References
"""

import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
import seaborn as sns
import numpy as np
import ta
from ta.volatility import BollingerBands
from ta.trend import MACD, SMAIndicator
from ta.momentum import RSIIndicator
import streamlit as st
import datetime

## Choose stock

types=['bdr','cambio','cripto','fii','index','bov','commodities','etf','futures']

#stock="USDBRL=X"    # ETH-USD BTTL3.SA USDBRL=X  ^N225
period='2y'

## Side Menu Streamlit

##########
# sidebar #
###########
type = st.sidebar.selectbox('Select type', types)
file='./symbols/'+type+'.csv'
symbolslist=open(file,'r').readlines()
stocks=[symbol.strip('\n') for symbol in symbolslist]
stock=st.sidebar.selectbox('Select type', stocks)
today = datetime.date.today()
before = today - datetime.timedelta(days=700)
start_date = st.sidebar.date_input('Start date', before)
end_date = st.sidebar.date_input('End date', today)
if start_date < end_date:
    st.sidebar.success('Start date: `%s`\n\nEnd date:`%s`' % (start_date, end_date))
else:
    st.sidebar.error('Error: End date must fall after start date.')

"""## InvestCop 
   ### Streamlit EDT """    
    
    
## Import data from Yahoo Finance

ticker=yf.Ticker(stock)

ydata = ticker.history(period=period)

ticker_info=ticker.info

#ticker_name=ticker_info['shortName']
tickername=ticker_info['shortName']

#ydata.head()

data=ydata[['Close']].copy()

## Data Quality check

#data.isna().sum()

#data.info()

#data.describe()

## Feature Engineering

#data.size

data['Delta']=data.Close/data.Close.shift(1) - 1

data['MA20']=SMAIndicator(data.Close,14).sma_indicator()

data['Boll+']=BollingerBands(data.Close).bollinger_hband()
data['Boll-']=BollingerBands(data.Close).bollinger_lband()

data['RFI20']=RSIIndicator(data.Close,14).rsi()
data['RFI100']=RSIIndicator(data.Close,100).rsi()

data.tail()

## Plot
###################
# Set up main app #
###################

st.write('Stock Price ')
#fig1=plt.Figure(1)
f,ax= plt.subplots(figsize=(20,10))
data.Close.plot(figsize=(20,10),title=tickername,marker='o',style='-')
data.MA20.plot(color='grey',label='MA20')
data['Boll+'].plot(color='green',style='--',label='Bol+')
data['Boll-'].plot(color='red',style='--',label='Bol-')
plt.legend(loc='upper left')
#plt.plot();
st.pyplot(f)
progress_bar = st.progress(0)

st.write('Stock RSI ')
#fig2=plt.Figure(2)
f2,ax= plt.subplots(figsize=(20,5))
data['RFI20'].plot(figsize=(20,5),title=tickername + ' - Indicators',color='black')
data['RFI100'].plot(color='pink')
plt.axhline(y=30,color='y',linestyle ='--')
plt.axhline(y=70,color='y',linestyle ='--')
plt.ylim(0,100)
plt.yticks(list(range(0,110,10)))
plt.legend(loc='upper left')
st.pyplot(f2)

st.write('Recent data ')
st.dataframe(data.tail(10))

'''
# Plot the prices and the bolinger bands
st.write('Stock Bollinger Bands')
st.line_chart(bb)

progress_bar = st.progress(0)

# Plot MACD
st.write('Stock Moving Average Convergence Divergence (MACD)')
st.area_chart(macd)

# Plot RSI
st.write('Stock RSI ')
st.line_chart(rsi)

# Data of recent days
st.write('Recent data ')
st.dataframe(df.tail(10))
'''
