#!/usr/bin/env python
# coding: utf-8

# # InvestCop Cockpit

# ### Date: 1/02/22

# In[74]:


#!/usr/bin/env python
# coding: utf-8

# In[25]:


# -*- coding: utf-8 -*-
"""investcop-streamlit-original.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1teOk6A0XNe4nyYeJ4sbvx2IjXpOLC0G5

# InvestCop
## Main DataFrame to generate Analysis Data from Yahoo Finance
## Streamlit Edt
## Date: 04/11/21

## References
"""

import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
import seaborn as sns
import numpy as np
import ta
from ta.volatility import BollingerBands
from ta.trend import MACD, SMAIndicator
from ta.momentum import RSIIndicator
import streamlit as st
import datetime
import tabulate
import plotly.express as px


# In[75]:


summary=pd.read_csv('summary.csv',low_memory=False)
summary.drop(columns='Unnamed: 0',inplace=True)


# In[76]:


summary.head()


# In[77]:


## Choose stock

types=['all','bdr','cambio','cripto','fii','index','bov','commodities','etf','futures']
rsiopts=['all','< 50','> 70']
bollopts=['all','Boll-2MA','MA2Boll+']
gainopts=['all','Q1','Q2','Q3','Q4']
#stock="USDBRL=X"    # ETH-USD BTTL3.SA USDBRL=X  ^N225
period='2y'

def insert(df, row):
    insert_loc = df.index.max()

    if pd.isna(insert_loc):
        df.loc[0] = row
    else:
        df.loc[insert_loc + 1] = row

## Side Menu Streamlit

##########
# sidebar #
###########
type1 = st.sidebar.selectbox('Select Market type', types)
#symbolslist=open(file,'r').readlines()
rsi=st.sidebar.selectbox('Choose RSI option',rsiopts)
boll=st.sidebar.selectbox('Choose Bollinger option',bollopts)
top=st.sidebar.selectbox('Choose Gain Per Day filter',gainopts)
#stock='ETH-USD' # ----> REMOVE

if top!='all':
    summary['GainQuartile']=pd.qcut(summary.GainPerDayCurrent, 4, labels=["Q4", "Q3", "Q2","Q1"])
    
   
#type1='bov'
if type1=='all':
    data=summary
else:
    data=summary.query("Type == @type1")

if top!='all':
    data=data.query("GainQuartile == @top")
#boll='Boll-2MA'
if boll=='Boll-2MA':
   data=data[data['Boll-2MA'] == True]
elif boll=='MA2Boll+':
    data=data[data['MA2Boll+'] == True]
    

    
"""## InvestCop 
   ### Cockpit """    

st.markdown('## '+ type1)

st.write('Gain Per Day Histogram')

fig=px.histogram(data,x='GainPerDayCurrent',color='Type')
st.plotly_chart(fig, use_container_width=True)


#fig, ax1 = plt.subplots()
#fig.tight_layout() 
#st.pyplot(fig)
#plt.close()


## Plot
###################
# Set up main app #
###################

st.write('Relative Gain vs Period ')

fig2=px.scatter(data_frame=data,x='TRelative',y='GainRelative',color='Type',hover_name='Symbol', title='Relative Gain vs Period for Investment Types')
st.plotly_chart(fig2, use_container_width=True)

# Create summary for Wave Analysis
st.write('Summary')
st.dataframe(summary)
#st.markdown(summary.round(decimals=2).transpose().to_markdown())
#st.table(summary.iloc[:,:])
#st.write(summary.iloc[:])
#print(summary)

